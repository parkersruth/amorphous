
TOKENS
–––––––––

Keywords:
	PUTS    display to console (debugging)
	PING		send ping to pals
	NQUE		add ping to queue
	IF			if
	ELIF		elif
	ELSE		else
	LOOP		for (ish)
	WITH		(assigns a looping variable)

Constants:
	RAND		random.random()
	NULL		None
	KEYS		self.data.keys()
	VALS		self.data.values()

Operators:
	&&			and
	||			or
	==			==
	<>			!=
	>>			>
	<<			<
	>=			>= or .endswith()
	<=			<= or .startswith()
	+				+
	-				-
	*				*
	/				/
	+=			+=
	-=			-=
	*=			*=
	/=			/=
	->			set to
	!				get cell data
	?				get ping data
	@				def ping with data
	.				new ping with data
	#				antiping threshold
	(				tuple open
	)				tuple close
	[				conditional open
	]				conditional close

Misc:
	%				javascript executable
	\				comment



GRAMMAR
–––––––


doc		> ''
			| def etc.

def		> @ pingid partlist opthash block

block		> { statement etc. }

statement	> APTQ ping
					| PING ping
					| switch
					| loop
					| value assignment data
					| python

ping		> . pingid tuple opthash
				| . ?

value		> ! data
				| ? part
				| variable

assignment	> ->
						| +=
						| -=

data		> number
				| literal
				| RAND
				| NULL
				| KEYS
				| VALS
				| ping
				| value
				| data + data
				| data - data
				| tuple

datalist	> ( datas )

datas		> ''
				| data, datas

switch		> IF conditional block optelifs optelse

conditional	> data comparison data
						| conditional & conditional
						| conditional | conditional
						| [ conditional ]

comparison	> ==
						| <<
						| >>
						| <=
						| >=
						| <>

loop		> LOOP data WITH variable block
				| LOOP data WITH variable IF conditional block







For example:


!’color’		<==>		this.data[‘color’]

?’color’		<==>		ping.data['color']


LOOP list WITH x IF x > 5		<==>   for (x of list) { if (x > 5) {  } }


(1,5,6,7)		<==>		[1, 5, 6, 7]


PING .paint(4, ’pink’)
PING .?

LOOP KEYS WITH x    <==>    for (x of this.keys()) { }
